###############################
## Base Configuration
###############################

# The base url of the deployed SAGE instance
base.url = http://localhost:8080

# Specify whether to initialize caches during application startup
init.caches = true

###############################
## Authentication Configuration
###############################
# Remote IPs matching user.ip_filter are not required to specify an API key.
# user.ip_filter is specified as a regular expression.
user.ip_filter = (127.0.0.1)
# Such requests default to using the user.default API key.
user.default =

###############################
## Logging Configuration
###############################
api.logging.enabled = true

###############################
## API Services Configuration
###############################

# Microsoft Bing
bing.key = API key obtained from Microsoft

# Yahoo (free service that uses YQL)
yahoo.url = http://query.yahooapis.com/v1/yql
yahoo.consumer.key = API key obtained from Yahoo
yahoo.consumer.secret = API secret obtained from Yahoo
yahoo.batch.size = 100

# Yahoo BOSS (commercial service)
yahoo.boss.url = http://yboss.yahooapis.com/geo/placefinder
yahoo.boss.consumer_key = API key obtained from Yahoo
yahoo.boss.consumer_secret = API secret obtained from Yahoo

# MapQuest (free and commercial services; free service is rate-limited)
mapquest.geo.url = http://www.mapquestapi.com/geocoding/v1/batch
mapquest.rev.url = http://www.mapquestapi.com/geocoding/v1/reverse
mapquest.key = <API key obtained from MapQuest>

# OpenStreetMap (free service from MapQuest using OSM data)
osm.url = http://open.mapquestapi.com/nominatim/v1/search

# USPS (free AIS web service)
usps.url = http://production.shippingapis.com/ShippingAPI.dll
usps.key = API key obtained from USPS

# NYSenate.gov
nysenate.key = API key obtained from NYSenate.gov site admin
nysenate.domain = nysenate.gov

# RubyGeocoder (free service)
geocoder.url = http://geocoder.nysenate.gov/GeoRubyAdapter/api/geocode
geocoder.bulk.url = http://geocoder.nysenate.gov/GeoRubyAdapter/api/bulk

################################
## GeoServer Integration
################################
geoserver.url = http://geoserver:8080/wfs
geoserver.workspace = nysenate

##################################
## GeoApi Database Configuration
##################################
db.driver = org.postgresql.Driver
db.type = postgresql
db.host = localhost
db.name = geoapi
db.user = postgres
db.pass = password for geoapi DB

################################
## Tiger Geocoder Configuration
################################
tiger.db.driver = org.postgresql.Driver
tiger.db.type = postgresql
tiger.db.host = localhost
tiger.db.name = geocoder
tiger.db.user = postgres
tiger.db.pass = password for geocoder DB

#################################
## Mailing Configuration
#################################
smtp.active = true
smtp.host = senmail.senate.state.ny.us
smtp.port = 25
smtp.user = 
smtp.pass = 
smtp.debug = false
smtp.admin = zalewski@nysenate.gov
smtp.tls.enable = true
smtp.ssl.enable = false
# The mailer doesn't have access to the server context, so specify manually
smtp.context = http://helo.nysenate.gov:8080

#################################
## Batch Job Configuration
#################################
# Set to false to disable all job related emails
job.send.email = true

# Local directory to save uploaded batch job files
job.upload.dir = /home/ash/Web/nysenate/GeoApi/uploads/

# Local directory to save completed batch jobs
job.download.dir = /home/ash/Web/nysenate/GeoApi/downloads/

# Directory served by tomcat to access completed batch jobs.
# Typically this should be set as <server ip>:8080/downloads.
# A symlink from <tomcat location>/webapps/downloads to job.download.dir needs to be created.
job.user.download.dir = http://localhost:8080/downloads/

job.batch.size = 40
job.threads.geocode = 2
job.threads.distassign = 2

#####################################
## District Assignment Configuration
#####################################

# The proximity threshold specifies how close a geocode has to be to a district boundary to
# trigger a nearest neighbor search. Since neighbor searches are somewhat expensive, it is recommended
# to keep the value between 0.001 and 0.005. Setting it to 0.001 triggers neighbor searches when
# the geocode is within a few hundred feet of a boundary.
proximity.threshold = 0.001

# District strategy sets up the default logic for district assignment.
# The names of the available options are:
# neighborMatch   : Perform shape and street lookup, performing consolidation only when proximity condition met.
# streetFallback  : Perform shape and street lookup, using street file in case of mismatch.
# shapeFallback   : Perform street lookup and only fall back to shape files when street lookup failed.
# streetOnly      : Perform street lookup only.
district.strategy.single = neighborMatch
district.strategy.batch = shapeFallback
district.strategy.bluebird = streetFallback

#####################################
## Geocode Cache Configuration
#####################################

# Enable/Disable use of geocode cache (true/false)
geocache.enabled = true

# The cache buffer size indicates the number of geocode results that
# are queued before being written to the cache database.
geocache.buffer.size = 100
